// prisma/schema.prisma
// TODO: 채널 카테고리 추가할 것

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String

  ownedServers Server[] @relation("owner")
  memberIn     Server[] @relation("members")

  ownedChannels Channel[]

  messages Message[]

  lastSeenMessages LastSeenMessageOnChannel[]

  planId              Int  @default(0)
  stripeCustomerId    String?  // Stripe에서 고객을 식별하는 데 사용
  subscriptionId      String?  // Stripe에서 구독을 식별하는 데 사용
  subscriptionStatus  String   @default("inactive")
  lastPaymentDate     DateTime?  // 마지막 결제 날짜
  nextPaymentDate     DateTime?  // 다음 결제 예정 날짜
}

model Server {
  id      Int     @id @default(autoincrement())
  name    String

  ownerId Int
  owner   User    @relation("owner", fields: [ownerId], references: [id])
  
  members User[] @relation("members")
  inviteCode String @unique @default(cuid())

  channels Channel[]

}

enum ChannelType {
  TEXT
  VOICE
}

model Channel {
  id        Int     @id @default(autoincrement())
  name      String 
  ownerId   Int
  owner     User    @relation(fields: [ownerId], references: [id])

  type      ChannelType @default(TEXT)

  serverId  Int
  server    Server  @relation(fields: [serverId], references: [id], onDelete: Cascade)

  messages  Message[] @relation("channelMessages")
  protected Boolean @default(false)
  
  lastMessageId Int?
  lastSeenMessages LastSeenMessageOnChannel[]

  createdAt DateTime @default(now())
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String

  channelId Int
  channel   Channel  @relation("channelMessages", fields: [channelId], references: [id], onDelete: Cascade)

  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
}

model LastSeenMessageOnChannel {
  id        Int     @id @default(autoincrement())
  userId    Int
  channelId Int
  messageId Int?

  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  channel  Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  @@unique([userId, channelId], name : "unique_user_channel")
}